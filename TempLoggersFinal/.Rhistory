title = element_text(hjust = 0.5,
color = "black"),
strip.background = element_rect(fill = "white"),
strip.text = element_text(color = "gray20"),
axis.text = element_text(color = "black"),
legend.title = element_blank())
#create plot
ggplot(data = Bone_Site1data) +
geom_point(aes(x = DateTime, y = Temp, color = tempRange), size = .5) +
geom_smooth(aes(x = DateTime, y = Temp), color = "green", size = 1) +
labs(x = "", y = "Water Temperature (degrees F)", title = "Hourly Water Temps", subtitle ="Bone Creek - Site 1") + # !!! don't forget to change graph title!!!
scale_y_continuous(limits = c(32,85)) +
scale_x_date(date_breaks = "1 month", date_minor_breaks = "1 month", date_labels = "%b-%Y") +
scale_color_manual(values = c("navy", "cadetblue", "darkred")) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid.major = element_line(color = "gray70"),
panel.background = element_rect(fill = "gray90"),
title = element_text(hjust = 0.5,
color = "black"),
strip.background = element_rect(fill = "white"),
strip.text = element_text(color = "gray20"),
axis.text = element_text(color = "black"),
legend.title = element_blank())
#get data
Bone_Site1data<- Bone_Site1%>% # change name to whatever waterbody_site you'd like to examine
mutate(DateTime = as.Date(DateTime, origin = "1960-10-01")) %>%
mutate(year = format(DateTime, "%Y")) %>%
mutate(jul = format(DateTime,  "%j"))# new_date = julian2date(julian_date))
#create temp range
#this function assigns color values to the temps
## I have classified streams into three different categories based on the Cool Water Streams Management Plan by NGPC (2016-2020).
### cold =<68F, cool= 68.1-76.9, warm >=77
Bone_Site1data$tempRange = "Cool"
Bone_Site1data$tempRange[Bone_Site1data$Temp < 68] <- "Cold"
Bone_Site1data$tempRange[Bone_Site1data$Temp >= 77] <- "Warm"
Bone_Site1data$tempRange <- factor(Bone_Site1data$tempRange, levels=c("Cold", "Cool", "Warm"))
#create plot
ggplot(data = Bone_Site1data) +
geom_point(aes(x = DateTime, y = Temp, color = tempRange), size = .5) +
geom_smooth(aes(x = DateTime, y = Temp), color = "green", size = 1) +
labs(x = "", y = "Water Temperature (degrees F)", title = "Hourly Water Temps", subtitle ="Bone Creek - Site 1") + # !!! don't forget to change graph title!!!
scale_y_continuous(limits = c(32,85)) +
scale_x_date(date_breaks = "1 month", date_minor_breaks = "1 month", date_labels = "%b-%Y") +
scale_color_manual(values = c("navy", "cadetblue", "darkred")) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid.major = element_line(color = "gray70"),
panel.background = element_rect(fill = "gray90"),
title = element_text(hjust = 0.5,
color = "black"),
strip.background = element_rect(fill = "white"),
strip.text = element_text(color = "gray20"),
axis.text = element_text(color = "black"),
legend.title = element_blank())
#create plot
ggplot(data = Bone_Site2data) +
geom_point(aes(x = DateTime, y = Temp, color = tempRange), size = .5) +
geom_smooth(aes(x = DateTime, y = Temp), color = "green", size = 1) +
labs(x = "", y = "Water Temperature (degrees F)", title = "Hourly Water Temps", subtitle ="Bone Creek - Site 2") + # !!! don't forget to change graph title!!!
scale_y_continuous(limits = c(32,85)) +
scale_x_date(date_breaks = "1 month", date_minor_breaks = "1 month", date_labels = "%b-%Y") +
scale_color_manual(values = c("navy", "cadetblue", "darkred")) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid.major = element_line(color = "gray70"),
panel.background = element_rect(fill = "gray90"),
title = element_text(hjust = 0.5,
color = "black"),
strip.background = element_rect(fill = "white"),
strip.text = element_text(color = "gray20"),
axis.text = element_text(color = "black"),
legend.title = element_blank())
#create plot
ggplot(data = Bone_Site2data) +
geom_point(aes(x = DateTime, y = Temp, color = tempRange), size = .5) +
geom_smooth(aes(x = DateTime, y = Temp), color = "green", size = 1) +
labs(x = "", y = "Water Temperature (degrees F)", title = "Hourly Water Temps", subtitle ="Bone Creek - Site 2") + # !!! don't forget to change graph title!!!
scale_y_continuous(limits = c(28,85)) +
scale_x_date(date_breaks = "1 month", date_minor_breaks = "1 month", date_labels = "%b-%Y") +
scale_color_manual(values = c("navy", "cadetblue", "darkred")) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid.major = element_line(color = "gray70"),
panel.background = element_rect(fill = "gray90"),
title = element_text(hjust = 0.5,
color = "black"),
strip.background = element_rect(fill = "white"),
strip.text = element_text(color = "gray20"),
axis.text = element_text(color = "black"),
legend.title = element_blank())
#create plot
ggplot(data = Bone_Site2data) +
geom_point(aes(x = DateTime, y = Temp, color = tempRange), size = .5) +
geom_smooth(aes(x = DateTime, y = Temp), color = "green", size = 1) +
labs(x = "", y = "Water Temperature (degrees F)", title = "Hourly Water Temps", subtitle ="Bone Creek - Site 2") + # !!! don't forget to change graph title!!!
scale_y_continuous(limits = c(20,85)) +
scale_x_date(date_breaks = "1 month", date_minor_breaks = "1 month", date_labels = "%b-%Y") +
scale_color_manual(values = c("navy", "cadetblue", "darkred")) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid.major = element_line(color = "gray70"),
panel.background = element_rect(fill = "gray90"),
title = element_text(hjust = 0.5,
color = "black"),
strip.background = element_rect(fill = "white"),
strip.text = element_text(color = "gray20"),
axis.text = element_text(color = "black"),
legend.title = element_blank())
#create plot
ggplot(data = Bone_Site2data) +
geom_point(aes(x = DateTime, y = Temp, color = tempRange), size = .5) +
geom_smooth(aes(x = DateTime, y = Temp), color = "green", size = 1) +
labs(x = "", y = "Water Temperature (degrees F)", title = "Hourly Water Temps", subtitle ="Bone Creek - Site 2") + # !!! don't forget to change graph title!!!
scale_y_continuous(limits = c(15,85)) +
scale_x_date(date_breaks = "1 month", date_minor_breaks = "1 month", date_labels = "%b-%Y") +
scale_color_manual(values = c("navy", "cadetblue", "darkred")) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid.major = element_line(color = "gray70"),
panel.background = element_rect(fill = "gray90"),
title = element_text(hjust = 0.5,
color = "black"),
strip.background = element_rect(fill = "white"),
strip.text = element_text(color = "gray20"),
axis.text = element_text(color = "black"),
legend.title = element_blank())
#create plot
ggplot(data = Bone_Site2data) +
geom_point(aes(x = DateTime, y = Temp, color = tempRange), size = .5) +
geom_smooth(aes(x = DateTime, y = Temp), color = "green", size = 1) +
labs(x = "", y = "Water Temperature (degrees F)", title = "Hourly Water Temps", subtitle ="Bone Creek - Site 2") + # !!! don't forget to change graph title!!!
scale_y_continuous(limits = c(15,100)) +
scale_x_date(date_breaks = "1 month", date_minor_breaks = "1 month", date_labels = "%b-%Y") +
scale_color_manual(values = c("navy", "cadetblue", "darkred")) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid.major = element_line(color = "gray70"),
panel.background = element_rect(fill = "gray90"),
title = element_text(hjust = 0.5,
color = "black"),
strip.background = element_rect(fill = "white"),
strip.text = element_text(color = "gray20"),
axis.text = element_text(color = "black"),
legend.title = element_blank())
#create plot
ggplot(data = Bone_Site2data) +
geom_point(aes(x = DateTime, y = Temp, color = tempRange), size = .5) +
geom_smooth(aes(x = DateTime, y = Temp), color = "green", size = 1) +
labs(x = "", y = "Water Temperature (degrees F)", title = "Hourly Water Temps", subtitle ="Bone Creek - Site 2") + # !!! don't forget to change graph title!!!
scale_y_continuous(limits = c(10,100)) +
scale_x_date(date_breaks = "1 month", date_minor_breaks = "1 month", date_labels = "%b-%Y") +
scale_color_manual(values = c("navy", "cadetblue", "darkred")) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid.major = element_line(color = "gray70"),
panel.background = element_rect(fill = "gray90"),
title = element_text(hjust = 0.5,
color = "black"),
strip.background = element_rect(fill = "white"),
strip.text = element_text(color = "gray20"),
axis.text = element_text(color = "black"),
legend.title = element_blank())
#create plot
ggplot(data = AIDdata) +
geom_point(aes(x = DateTime, y = Temp, color = tempRange), size = .5) +
geom_smooth(aes(x = DateTime, y = Temp), color = "green", size = 1) +
labs(x = "", y = "Water Temperature (degrees F)", title = "Hourly Water Temps", subtitle ="Alliance Drainage") + # !!! don't forget to change graph title!!!
scale_y_continuous(limits = c(10,100)) +
scale_x_date(date_breaks = "1 month", date_minor_breaks = "1 month", date_labels = "%b-%Y") +
scale_color_manual(values = c("navy", "cadetblue", "darkred")) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid.major = element_line(color = "gray70"),
panel.background = element_rect(fill = "gray90"),
title = element_text(hjust = 0.5,
color = "black"),
strip.background = element_rect(fill = "white"),
strip.text = element_text(color = "gray20"),
axis.text = element_text(color = "black"),
legend.title = element_blank())
library(RODBC)
library(tidyverse)
con <- odbcDriverConnect("Driver={Microsoft Access Driver (*.mdb, *.accdb)};DBQ=W:/Fisheries/Rivers and Streams Program/Temp Loggers/TemperatureLoggers.accdb")
sqlFetch(con, 'Bordeaux_North') -> Bordeaux_North
odbcClose(con)
sqlFetch(con, 'Snake_HWY61') -> Snake_HWY61
#get data
Bordeaux_Northdata<- Bordeaux_North%>% # change name to whatever waterbody_site you'd like to examine
mutate(DateTime = as.Date(DateTime, origin = "1960-10-01")) %>%
mutate(year = format(DateTime, "%Y")) %>%
mutate(jul = format(DateTime,  "%j"))# new_date = julian2date(julian_date))
#get data
Bordeaux_Northdata<- Bordeaux_North%>% # change name to whatever waterbody_site you'd like to examine
mutate(DateTime = as.Date(DateTime, origin = "1960-10-01")) %>%
mutate(year = format(DateTime, "%Y")) %>%
mutate(jul = format(DateTime,  "%j"))# new_date = julian2date(julian_date))
con <- odbcDriverConnect("Driver={Microsoft Access Driver (*.mdb, *.accdb)};DBQ=W:/Fisheries/Rivers and Streams Program/Temp Loggers/TemperatureLoggers.accdb")
sqlFetch(con, 'Bordeaux_North') -> Bordeaux_North
odbcClose(con)
#get data
Bordeaux_Northdata<- Bordeaux_North%>% # change name to whatever waterbody_site you'd like to examine
mutate(DateTime = as.Date(DateTime, origin = "1960-10-01")) %>%
mutate(year = format(DateTime, "%Y")) %>%
mutate(jul = format(DateTime,  "%j"))# new_date = julian2date(julian_date))
#create temp range
#this function assigns color values to the temps
## I have classified streams into three different categories based on the Cool Water Streams Management Plan by NGPC (2016-2020).
### cold =<68F, cool= 68.1-76.9, warm >=77
Bordeaux_Northdata$tempRange = "Cool"
Bordeaux_Northdata$tempRange[Bordeaux_Northdata$Temp < 68] <- "Cold"
Bordeaux_Northdata$tempRange[Bordeaux_Northdata$Temp >= 77] <- "Warm"
Bordeaux_Northdata$tempRange <- factor(Bordeaux_Northdata$tempRange, levels=c("Cold", "Cool", "Warm"))
#create plot
ggplot(data = Bordeaux_Northdata) +
geom_point(aes(x = DateTime, y = Temp, color = tempRange), size = .5) +
geom_smooth(aes(x = DateTime, y = Temp), color = "green", size = 1) +
labs(x = "", y = "Water Temperature (degrees F)", title = "Hourly Water Temps", subtitle ="Bordeaux Creek - North") + # !!! don't forget to change graph title!!!
scale_y_continuous(limits = c(10,100)) +
scale_x_date(date_breaks = "1 month", date_minor_breaks = "1 month", date_labels = "%b-%Y") +
scale_color_manual(values = c("navy", "cadetblue", "darkred")) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid.major = element_line(color = "gray70"),
panel.background = element_rect(fill = "gray90"),
title = element_text(hjust = 0.5,
color = "black"),
strip.background = element_rect(fill = "white"),
strip.text = element_text(color = "gray20"),
axis.text = element_text(color = "black"),
legend.title = element_blank())
install.packages("ggpubr")
library(RODBC)
library(tidyverse)
con <- odbcDriverConnect("Driver={Microsoft Access Driver (*.mdb, *.accdb)};DBQ=W:/Fisheries/Rivers and Streams Program/Temp Loggers/TemperatureLoggers.accdb")
sqlFetch(con, 'Plum_Site3') -> Plum_Site3
sqlFetch(con, 'Bordeaux_North') -> Bordeaux_North
odbcClose(con)
#get data
data1 <- Plum_Site3%>% # change name to whatever waterbody_site you'd like to examine
mutate(DateTime = as.Date(DateTime, origin = "1960-10-01")) %>%
mutate(year = format(DateTime, "%Y")) %>%
mutate(jul = format(DateTime,  "%j"))# new_date = julian2date(julian_date))
View(data1)
#create temp range
#this function assigns color values to the temps
## I have classified streams into three different categories based on the Cool Water Streams Management Plan by NGPC (2016-2020).
### cold =<68F, cool= 68.1-76.9, warm >=77
data1$tempRange = "Cool"
data1$tempRange[data1$Temp < 68] <- "Cold"
data1$tempRange[data1$Temp >= 77] <- "Warm"
data1$tempRange <- factor(data1$tempRange, levels=c("Cold", "Cool", "Warm"))
#create plot
ggplot(data = data1) +
geom_point(aes(x = DateTime, y = Temp, color = tempRange), size = .5) +
geom_smooth(aes(x = DateTime, y = Temp), color = "green", size = 1) +
labs(x = "", y = "Water Temperature (degrees F)", title = "Hourly Water Temps", subtitle ="Plum Creek - Site 3") + # !!! don't forget to change graph title!!!
scale_y_continuous(limits = c(0,85)) +
scale_x_date(date_breaks = "1 month", date_minor_breaks = "1 month", date_labels = "%b-%Y") +
scale_color_manual(values = c("navy", "cadetblue", "darkred")) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid.major = element_line(color = "gray70"),
panel.background = element_rect(fill = "gray90"),
title = element_text(hjust = 0.5,
color = "black"),
strip.background = element_rect(fill = "white"),
strip.text = element_text(color = "gray20"),
axis.text = element_text(color = "black"),
legend.title = element_blank())
View(data1)
View(data1)
View(data1)
hobotemplongdate <- tidyr::separate(Bordeaux_North, 'date',
into = c('longdate', 'time'),
sep = ' ')
hobotemplongdate <- tidyr::separate(Bordeaux_North, 'DateTime',
into = c('Date', 'Time'),
sep = ' ')
Bordeaux_North <- tidyr::separate(Bordeaux_North, 'DateTime',
into = c('Date', 'Time'),
sep = ' ')
View(Bordeaux_North)
head(Bordeaux_North)
con <- odbcDriverConnect("Driver={Microsoft Access Driver (*.mdb, *.accdb)};DBQ=W:/Fisheries/Rivers and Streams Program/Temp Loggers/TemperatureLoggers.accdb")
sqlFetch(con, 'Bordeaux_Cliffs') -> Bordeaux_Cliffs
odbcClose(con)
library(RODBC)
library(tidyverse)
con <- odbcDriverConnect("Driver={Microsoft Access Driver (*.mdb, *.accdb)};DBQ=W:/Fisheries/Rivers and Streams Program/Temp Loggers/TemperatureLoggers.accdb")
sqlFetch(con, 'Bordeaux_Cliffs') -> Bordeaux_Cliffs
sqlFetch(con, 'Bordeaux_North') -> Bordeaux_North
odbcClose(con)
View(Bordeaux_Cliffs)
rbind(Bordeaux_Cliffs, Bordeaux_North) -> Bordeaux_All
Bordeaux_All <- tidyr::separate(Bordeaux_All, 'DateTime',
into = c('Date', 'Time'),
sep = ' ')
head(Bordeaux_North)
View(Bordeaux_All)
ntempgraph <- ggplot(data=Bordeaux_All,
aes(x=as.Date(Date, format = "%m / %d / %Y"),
y=Temp, colour=Site)) +
geom_point(size=1, alpha = 1/10)+ theme_bw()+
facet_grid(fct_relevel(Site, "Cliffs", "North")~lter)+
theme(axis.text.x = element_text(angle=45, margin = margin(t=20, r=100)))+
labs(title="Raw temperature data", y="Temperature (°F)", x="Date")
ntempgraph
ntempgraph <- ggplot(data=Bordeaux_All,
aes(x=as.Date(Date, format = "%m / %d / %Y"),
y=Temp, colour=Site)) +
geom_point(size=1, alpha = 1/10)+ theme_bw()+
facet_grid(fct_relevel(Site, "Cliffs", "North")~Date)+
theme(axis.text.x = element_text(angle=45, margin = margin(t=20, r=100)))+
labs(title="Raw temperature data", y="Temperature (°F)", x="Date")
ntempgraph
ntempgraph <- ggplot(data=Bordeaux_All,
aes(x=as.Date(Date, format = "%m / %d / %Y"),
y=Temp, colour=Site)) +
geom_point(size=1, alpha = 1/10)+ theme_bw()+
facet_grid(fct_relevel(Site, "Cliffs", "North"))+
theme(axis.text.x = element_text(angle=45, margin = margin(t=20, r=100)))+
labs(title="Raw temperature data", y="Temperature (°F)", x="Date")
ntempgraph <- ggplot(data=Bordeaux_All,
aes(x=as.Date(Date, format = "%m / %d / %Y"),
y=Temp, colour=Site)) +
geom_point(size=1, alpha = 1/10)+ theme_bw()+
# facet_grid(fct_relevel(Site, "Cliffs", "North")~)+
theme(axis.text.x = element_text(angle=45, margin = margin(t=20, r=100)))+
labs(title="Raw temperature data", y="Temperature (°F)", x="Date")
ntempgraph
as.Date(Bordeaux_All$Date, format = "%m / %d / %Y") -> Bordeaux_All$Date
Bordeaux_All$Year <- Bordeaux_All$Date("%Y")
ntempgraph <- ggplot(data=Bordeaux_All,
aes(x=as.Date(Date, format = "%m / %d / %Y"),
y=Temp, colour=Site)) +
geom_point(size=1, alpha = 1/10)+ theme_bw()+
# facet_grid(fct_relevel(Site, "Cliffs", "North")~)+
theme(axis.text.x = element_text(angle=45, margin = margin(t=20, r=100)))+
labs(title="Raw temperature data", y="Temperature (°F)", x="Date")
ntempgraph
ntempgraph <- ggplot(data=Bordeaux_All,
aes(x=as.Date(Date, format = "%m / %d / %Y"),
y=Temp, colour=Site)) +
geom_point(size=1, alpha = 1/10)+ theme_bw()+
facet_grid(fct_relevel(Site, "Cliffs", "North")~lter)+
theme(axis.text.x = element_text(angle=45, margin = margin(t=20, r=100)))+
labs(title="Raw temperature data", y="Temperature (°F)", x="Date")
ntempgraph
con <- odbcDriverConnect("Driver={Microsoft Access Driver (*.mdb, *.accdb)};DBQ=W:/Fisheries/Rivers and Streams Program/Temp Loggers/TemperatureLoggers.accdb")
sqlFetch(con, 'Bordeaux_Cliffs') -> Bordeaux_Cliffs
sqlFetch(con, 'Bordeaux_North') -> Bordeaux_North
odbcClose(con)
rbind(Bordeaux_Cliffs, Bordeaux_North) -> Bordeaux_All
Bordeaux_All <- tidyr::separate(Bordeaux_All, 'DateTime',
into = c('Date', 'Time'),
sep = ' ')
head(Bordeaux_All)
ntempgraph <- ggplot(data=Bordeaux_All,
aes(x=as.Date(Date, format = "%m / %d / %Y"),
y=Temp, colour=Site)) +
geom_point(size=1, alpha = 1/10)+ theme_bw()+
# facet_grid(fct_relevel(Site, "Cliffs", "North")~Site)+
# theme(axis.text.x = element_text(angle=45, margin = margin(t=20, r=100)))+
# labs(title="Raw temperature data", y="Temperature (°F)", x="Date")
ntempgraph
ntempgraph <- ggplot(data=Bordeaux_All,
aes(x=as.Date(Date, format = "%m / %d / %Y"),
y=Temp, colour=Site)) +
geom_point(size=1, alpha = 1/10)+ theme_bw()
ntempgraph <- ggplot(data=Bordeaux_All,
aes(x=as.Date(Date, format = "%m / %d / %Y"),
y=Temp, colour=Site)) +
geom_point(size=1, alpha = 1/10)+ theme_bw()+
# facet_grid(fct_relevel(Site, "Cliffs", "North")~Site)+
# theme(axis.text.x = element_text(angle=45, margin = margin(t=20, r=100)))+
# labs(title="Raw temperature data", y="Temperature (°F)", x="Date")
ntempgraph
ntempgraph <- ggplot(data=Bordeaux_All,
aes(x=as.Date(Date, format = "%m / %d / %Y"),
y=Temp, colour=Site)) +
geom_point(size=1, alpha = 1/10)+ theme_bw()
# facet_grid(fct_relevel(Site, "Cliffs", "North")~Site)+
# theme(axis.text.x = element_text(angle=45, margin = margin(t=20, r=100)))+
# labs(title="Raw temperature data", y="Temperature (°F)", x="Date")
ntempgraph
ntempgraph <- ggplot(data=Bordeaux_All,
aes(x=as.Date(Date, format = "%m - %d - %Y"),
y=Temp, colour=Site)) +
geom_point(size=1, alpha = 1/10)+ theme_bw()
# facet_grid(fct_relevel(Site, "Cliffs", "North")~Site)+
# theme(axis.text.x = element_text(angle=45, margin = margin(t=20, r=100)))+
# labs(title="Raw temperature data", y="Temperature (°F)", x="Date")
ntempgraph
View(Bordeaux_All)
ntempgraph <- ggplot(data=Bordeaux_Cliffs,
aes(x=as.Date(Date, format = "%m - %d - %Y"),
y=Temp, colour=Site)) +
geom_point(size=1, alpha = 1/10)+ theme_bw()
# facet_grid(fct_relevel(Site, "Cliffs", "North")~Site)+
# theme(axis.text.x = element_text(angle=45, margin = margin(t=20, r=100)))+
# labs(title="Raw temperature data", y="Temperature (°F)", x="Date")
ntempgraph
Bordeaux_Cliffs <- tidyr::separate(Bordeaux_Cliffs, 'DateTime',
into = c('Date', 'Time'),
sep = ' ')
ntempgraph <- ggplot(data=Bordeaux_Cliffs,
aes(x=as.Date(Date, format = "%m - %d - %Y"),
y=Temp, colour=Site)) +
geom_point(size=1, alpha = 1/10)+ theme_bw()
# facet_grid(fct_relevel(Site, "Cliffs", "North")~Site)+
# theme(axis.text.x = element_text(angle=45, margin = margin(t=20, r=100)))+
# labs(title="Raw temperature data", y="Temperature (°F)", x="Date")
ntempgraph
ggplot(data=Bordeaux_Cliffs,
aes(x=as.Date(Date, format = "%m - %d - %Y"),
y=Temp, colour=Site))
Bordeaux_All %>%
tidyr::separate('Date',
into = c('year', 'month', 'day'),
sep = '-',
remove = FALSE) -> Bordeaux_Full
View(Bordeaux_Full)
head(Bordeaux_Full)
Bordeaux_Full %>%
group_by(year, month, day, Site, Date) %>%
summarise(meanTemp = mean(Temp)) -> Bordeaux_Full_Mean
View(Bordeaux_Full_Mean)
View(Bordeaux_All)
meanplot <- ggplot(Bordeaux_Full_Mean,
aes(x=as.Date(Date, format= "%m / %d / %Y"), y=meantemp))+
geom_smooth(aes(colour=Site))+
theme_bw()+
labs(title= "Daily temperature means", y="Daily mean temperature (°C) with 95% CI", x="Date")
meanplot
meanplot <- ggplot(Bordeaux_Full_Mean,
aes(x=as.Date(Date, format= "%m / %d / %Y"), y=meanTemp))+
geom_smooth(aes(colour=Site))+
theme_bw()+
labs(title= "Daily temperature means", y="Daily mean temperature (°C) with 95% CI", x="Date")
meanplot
Bordeaux_All %>%
filter(Site == "Cliffs") -> BdCliffs
View(BdCliffs)
View(Bordeaux_Full_Mean)
View(Bordeaux_Full)
Bordeaux_Full_Mean %>%
filter(Site == "Cliffs") -> BdCliffs
meanplot <- ggplot(BdCliffs,
aes(x=as.Date(Date, format= "%m / %d / %Y"), y=meanTemp))+
geom_smooth(aes(colour=Site))+
theme_bw()+
labs(title= "Daily temperature means", y="Daily mean temperature (°C) with 95% CI", x="Date")
meanplot
View(Bordeaux_Full_Mean)
View(Bordeaux_Full)
Bordeaux_Full_Mean %>%
filter(Date < "2016-05-27",
Date > "2017-11-15") -> Bd
Bordeaux_Full_Mean %>%
filter(Date <= "2016-05-27") -> Bd
View(Bd)
View(Bd)
Bordeaux_Full_Mean %>%
filter(Date >= "2016-05-27") -> Bd
View(Bd)
Bordeaux_Full_Mean %>%
filter(Date >= "2016-05-27") %>%
filter(Date <= "2017-11-15") -> Bd
Bd$year <- factor(Bd, levels = c("2016", "2017"))
View(Bd)
meanplot <- ggplot(Bd,
aes(x=as.Date(Date, format= "%Y - %m - %d"), y=meanTemp))+
geom_smooth(aes(colour=Site))+
theme_bw()+
labs(title= "Daily temperature means", y="Daily mean temperature (°C) with 95% CI", x="Date")
meanplot
meanplot <- ggplot(Bordeaux_Full_Mean,
aes(x=as.Date(Date, format= "%Y - %m - %d"), y=meanTemp))+
geom_smooth(aes(colour=Site))+
theme_bw()+
labs(title= "Daily temperature means", y="Daily mean temperature (°C) with 95% CI", x="Date")
meanplot
View(Bd)
gplot(Bd,
aes(x=as.Date(Date, format= "%Y - %m - %d"), y=meanTemp))+
geom_smooth(aes(colour=Site))+
theme_bw()+
labs(title= "Daily temperature means", y="Daily mean temperature (°C) with 95% CI", x="Date")
BdPlot <- ggplot(Bd,
aes(x=as.Date(Date, format= "%Y - %m - %d"), y=meanTemp))+
geom_smooth(aes(colour=Site))+
theme_bw()+
labs(title= "Daily temperature means", y="Daily mean temperature (°C) with 95% CI", x="Date")
BdPlot
Bordeaux_Full %>%
group_by(year, month, Site) %>%
summarise(meanTemp = mean(Temp)) -> Bordeaux_Month_Mean #
Bordeaux_Full %>%
group_by(year, month, Site) %>%
summarise(meanTemp = mean(Temp)) -> Bordeaux_Month_Mean #
nrow(Bordeaux_Month_Mean)
Bordeaux_Month_Mean_aov <- aov(meanTemp~Site + as.factor(month) + as.factor(Site),
data = Bordeaux_Month_Mean)
summary(Bordeaux_Month_Mean_aov)
Bordeaux_Month_Mean_aov <- aov(meanTemp~Site + as.factor(month),
data = Bordeaux_Month_Mean)
summary(Bordeaux_Month_Mean_aov)
View(Bordeaux_Month_Mean)
Bordeaux_Full_Mean_aov <- aov(meanTemp~Site + as.factor(day),
data = Bordeaux_Full_Mean)
summary(Bordeaux_Full_Mean_aov)
